pipeline {
    agent any
    environment {
        LABS = credentials('labcreds')
    }
    stages {
        stage('Build') {
            steps {
                sh '''
                    set -e
                    python3 -m venv .venv
                    . .venv/bin/activate
                    pip install --upgrade pip
                    pip install pipenv
                    pipenv install
                '''
            }
        }
        stage('Test') {
            steps {
                sh '''
                    set -e
                    . .venv/bin/activate

                    # ---- Ensure a JDK is present (local, no sudo) ----
                    if [ ! -x ".jdk/bin/java" ]; then
                      echo "Downloading Temurin JDK 17..."
                      curl -fsSL -o jdk.tar.gz \
                        https://api.adoptium.net/v3/binary/latest/17/ga/linux/x64/jdk/hotspot/normal/eclipse
                      mkdir -p .jdk
                      tar -xzf jdk.tar.gz -C .jdk --strip-components=1
                      rm -f jdk.tar.gz
                    fi
                    export JAVA_HOME="$PWD/.jdk"
                    export PATH="$JAVA_HOME/bin:$PATH"

                    # ---- Make PySpark use the venvâ€™s Python ----
                    PY_BIN="$(pipenv --py)"
                    export PYSPARK_PYTHON="$PY_BIN"
                    export PYSPARK_DRIVER_PYTHON="$PY_BIN"

                    # Sanity checks
                    java -version
                    "$PY_BIN" --version

                    pipenv run pytest
                '''
            }
        }
        stage('Package') {
            steps {
                sh 'tar -czf retailproject.tgz .'
            }
        }
        stage('Deploy') {
            steps {
                sh '''
                    sshpass -p $LABS_PSW scp -o StrictHostKeyChecking=no -r . \
                    retailproject.tgz \
                    $LABS_USR@g02.itversity.com:/home/itv022118/retailproject
                '''
            }
        }
    }
}
